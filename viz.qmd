# Visualizing surprise song outfits

```{r}
#| echo: FALSE
#| message: FALSE
load("onload.RData")
require(tidyverse)
```

```{r, message = FALSE}
## extra packages
require(ggimage)
require(extrafont)
require(packcircles)
require(ggrepel)
require(cowplot)
```

## The most worn *looks* {.unnumbered}

```{r}
## barchart
ggplot(outfits, aes(x = reorder(DressName, -n), y = n, fill = DressName)) +
    geom_bar(stat = "identity", width = 0.8) +  
    geom_image(
        aes(image = imagePath, y = n),  
        size = 0.15,                    
        by = "height"                    
    ) +
    geom_text(
        aes(y = n + 3.8, label = paste0(n, "\n(", round(percentage, 1), "%)")),  
        vjust = 0,  
        color = "black",
        size = 4
    ) +
    scale_fill_manual(values = colorPaletteDresses) +
    theme_minimal() +
    labs(title = "", x = "", y = "") +
    theme(
        axis.text.x = element_text(angle = 45, hjust = 1, size = 14),
        axis.text.y = element_text(size = 14),
        plot.title = element_text(hjust = 0.5, size = 16),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.position = "none"
    ) + ylim(0, 35)
```



## Surprise song color groups {.unnumbered}


```{r}
#| eval: FALSE
#| fig-width: 7
#| fig-height: 7
surpriseSongsDressColours$groupName <- sapply(surpriseSongsDressColours$DressName, function(color) {
  if (color %in% c("Pink", "Flamingo pink")) return("reds")
  if (color %in% c("Green")) return("greens")
  if(color %in% c("Yellow", "Sunset orange")) return("yellows")
  if (color %in% c("Ocean blue", "Blue", "Blurple")) return ("blues")
  if (color %in% c("Popsicle", "Cotton candy", "Grapefruit")) return ("colorful")
  return("Neutral")
})

songs_with_single_color_group <- surpriseSongsDressColours %>%
  group_by(`Song title`) %>%
  summarize(
    total_performances = n(),
    unique_color_groups = n_distinct(groupName),
    color_group = first(groupName) 
  ) %>%
  filter(unique_color_groups == 1, total_performances > 1) %>%
  arrange(desc(total_performances))

single_color_performances <- surpriseSongsDressColours %>%
    filter(`Song title` %in% songs_with_single_color_group$`Song title`)

## pics
blues <- paste("dress_images/images_high_res/cropped/", c("blue", "ocean_blue", "blurple"), ".jpg", sep = "")
reds <- paste("dress_images/images_high_res/cropped/", c("pink", "flamingo_pink"), ".jpg", sep = "")
yellows <- paste("dress_images/images_high_res/cropped/", c("yellow", "sunset_orange"), ".jpg", sep = "")

coords <- circleProgressiveLayout(table(single_color_performances$groupName),
                                  sizetype = 'area')
coords$id <- names(table(single_color_performances$groupName))
df.gg <- circleLayoutVertices(coords, npoints = 8, id = 4)
snames <- single_color_performances %>% select('Song title', groupName) %>%
    group_by(`Song title`) %>% mutate(count = n()) %>% ungroup() |> unique()
set.seed(1984) ## for jitter repel
plot <- ggplot() + theme_void() +
    ## blues
    geom_polygon(data = df.gg[df.gg$id == "blues",], aes(x = x, y = y),
                 fill = "#0000FF", alpha = 0.05) +
    geom_text_repel(aes(x = coords$x[1], 
                        y = coords$y[1], 
                        label = snames$`Song title`[snames$groupName == "blues"]),
                    col = "#0000FF", nudge_y = -1.1, nudge_x = 0.1, segment.color = NA,
                    size = 1.5*snames$count[snames$groupName == "blues"], box.padding = 0.1,
                    family = "Gill Sans MT") +
    ## reds
    geom_polygon(data = df.gg[df.gg$id == "reds",], aes(x = x, y = y),
                 fill = "#FF0000", alpha = 0.05)  +
    geom_text_repel(aes(x = coords$x[2], 
                        y = coords$y[2], 
                        label = snames$`Song title`[snames$groupName == "reds"]),
                    col = "#FF0000", nudge_y = -0.9, nudge_x = 0.1, segment.color = NA,
                    size = 1.5*snames$count[snames$groupName == "reds"], box.padding = 0.1,
                    family = "Gill Sans MT") +
    ## yellows
    geom_polygon(data = df.gg[df.gg$id == "yellows",], aes(x = x, y = y),
                 fill = "#FFD700", alpha = 0.05)  +
    geom_text_repel(aes(x = coords$x[3], 
                        y = coords$y[3], 
                        label = snames$`Song title`[snames$groupName == "yellows"]),
                    col = "#FFD700", nudge_y = 1.4, nudge_x = 0, segment.color = NA,
                    size = 1.5*snames$count[snames$groupName == "yellows"], box.padding = 0.1,
                    family = "Gill Sans MT")

## image sizes relative to
## table(single_color_performances$DressName, single_color_performances$groupName)
set.seed(1984) ## for jitter repel
ggdraw() +
    draw_plot(plot) +
    draw_image(blues[1], -0.37, 0.23, scale = 0.5/3) +
    draw_image(blues[2],  -0.2, 0.32, scale = 0.8/3) +
    draw_image(blues[3],  -0.07, 0.26, scale = 0.4/3) +
    draw_image(reds[1], 0.1, 0.27, scale = 0.8/3) +
    draw_image(reds[2],  0.3, 0.33, scale = 0.7/3) +
    draw_image(yellows[1], -0.1, -0.25, scale = 0.7/3) +
    draw_image(yellows[2],  0.1, -0.3, scale = 1.1/3) 
```